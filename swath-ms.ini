# 3-2-2020 JHZ

UniProt <- function()
{
  library(UniProt.ws)
  x <- UniProt.ws(taxId=9606)
  columns(x)
  keytypes(x)
  keys <- with(hgTables,entrezGene)
  columns <- c("PDB","GENES","HGNC","PROTEIN-NAMES","UNIPROTKB")
  keytypes <- c("ENTREZ_GENE")
  r <- select(x,keys,columns,keytypes)
  library(org.Hs.eg.db)
  columns(org.Hs.eg.db)
  s <- select(org.Hs.eg.db,keys,c("UNIPROT","ENSEMBL","ENSEMBLPROT","SYMBOL","ENSEMBLTRANS"))
  require(hgu95av2.db)
  x <- hgu95av2UNIPROT
  mapped_genes <- mappedkeys(x)
  xx <- as.list(x[mapped_genes])
  if(length(xx) > 0) xx[1:5]
}

swath_ms_xlsx <- function()
{
  hgTables <- read.delim("hgTables.gz",quote="")
  load(paste(Sys.getenv("INF"),"Caprion","caprion.rda",sep="/"))
  m <- merge(Protein_All_Peptides,protein_list,by="Protein")
  id1 <- with(m,Accession)
  library(openxlsx)
  rds.xlsx <- "DIINT01_BATCH_1_MS_BATCH_INPUT_RDS_02DEC19 final.xlsx"
  protein_matrix.xlsx <- "DIINT_protein_matrix final.xlsx"
  rds <- read.xlsx(rds.xlsx, sheet = 1, startRow = 1)
  protein_matrix <- read.xlsx(protein_matrix.xlsx, sheet = 1, startRow = 1)
  id <- t(protein_matrix[1,-1])
  colnames(id) <- "Internal.ID"
  id2 <- protein_matrix[-1,"Internal.ID"]
  o <-id2[!id2%in%with(hgTables,acc)]
  f <- function(i) {index <- grep(o[i],hgTables$accList); cat(index,o[i],"\n"); as.character(hgTables$accList[index])}
  for(i in 1:6) print(f(i))
# P01621, P01771, P01776, P01781, P08107, P62158
# P01619, P01772, P01764, P01780, P08107, P62158
# P08107 and P62158 were obsolete on May 27 and 10, 2015, respectively
  r <- c("P01619", "P01772", "P01764", "P01780", "P08107", "P62158")
  protein_matrix <- within(protein_matrix,{Internal.ID[Internal.ID%in%o] <- r})
  p <- t(protein_matrix[-1,-1])
  colnames(p) <- protein_matrix[-1,"Internal.ID"]
  head(p[,colnames(p)%in%o])
  swath_protein <- data.frame(id,External.ID=rownames(id), p)
  hgTables_vars <- c("acc","accList","uniprotName","ensGene","geneName")
  annotated_protein_matrix <- merge(data.frame(Accession=protein_matrix[-1,1]),hgTables[hgTables_vars],by.x="Accession",by.y="acc")
  save(hgTables,annotated_protein_matrix,protein_matrix,swath_protein,rds,file="swath-ms.rda")
}

swath_overlap <- function()
{
  id2 <- data.frame(Accession=protein_matrix[-1,1])
  dir <- paste(Sys.getenv("INF"),"Caprion",sep="/")
  source(paste(dir,"utils/olink.inc",sep="/"))
  tmp <- read.delim(paste(dir,"inf1.tmp",sep="/"),as.is=TRUE,col.names=c("prot","uniprot"))
  olink_inf1 <- read.delim(paste(dir,"olink.inf.panel.annot.tsv",sep="/"),
                           as.is=TRUE)[c("target","target.short","uniprot","panel","hgnc_symbol")]
  inf1 <- merge(tmp,olink_inf1,by="uniprot")
  swath_chk <- merge(inf1,id2,by.x="uniprot",by.y="Accession")
  write.csv(swath_chk,file="swath_inf1.chk",row.names=FALSE,quote=FALSE)
  xlsx <- paste(dir,"Olink validation data all panels.xlsx",sep="/")
  tabs <- c("CVD II","CVD III","Inflammation","Neurology")
  olink_panel(xlsx,tabs,TRUE,92,FALSE)
  swath_inf1 <- merge(id2,Inflammation[c("Target","UniProt.No.")],by.x="Accession",by.y="UniProt.No.")
  write.csv(swath_inf1,file="swath_inf1.csv",row.names=FALSE,quote=FALSE)
  swath_cvd2 <- merge(id2,CVD_II[c("Target","UniProt.No.")],by.x="Accession",by.y="UniProt.No.")
  write.csv(swath_cvd2,file="swath_cvd2.csv",row.names=FALSE,quote=FALSE)
  swath_cvd3 <- merge(id2,CVD_III[c("Target","UniProt.No")],by.x="Accession",by.y="UniProt.No")
  write.csv(swath_cvd3,file="swath_cvd3.csv",row.names=FALSE,quote=FALSE)
  swath_neurology <- merge(id2,Neurology[c("Target","UniProt.No")],by.x="Accession",by.y="UniProt.No")
  write.csv(swath_neurology,file="swath_neurology.csv",row.names=FALSE,quote=FALSE)
  somalogic <- read.delim(paste(dir,"SOMALOGIC_Master_Table_160410_1129info.tsv",sep="/"),as.is=TRUE)
  swath_somalogic <- merge(id2,somalogic[c("Target","UniProt")],by.x="Accession",by.y="UniProt")
  write.csv(unique(swath_somalogic),file="swath_somalogic.csv",row.names=FALSE,quote=FALSE)
}
